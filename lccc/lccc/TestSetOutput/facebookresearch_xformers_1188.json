{
  "input_header": "def tiled_matmul_fwd( flat_a: List[torch.Tensor], flat_b: List[torch.Tensor], ms: List[int], ns: List[int], ks: List[int], ) -> List[torch.Tensor]:",
  "input_docstring": null,
  "output_code": "def tiled_matmul_fwd(\n    flat_a: List[torch.Tensor],\n    flat_b: List[torch.Tensor],\n    ms: List[int],\n    ns: List[int],\n    ks: List[int],\n) -> List[torch.Tensor]:\n    a = _unflatten(flat_a, len(ms), len(ks))\n    b = _unflatten(flat_b, len(ks), len(ns))\n\n    c = [[a[0][0].new_empty((m, n)) for n in ns] for m in ms]\n    tiled_matmul_out(a, b, out=c)\n\n    return _flatten(c, len(ms), len(ns))",
  "input_contexts": [
    {
      "id": "facebookresearch_xformers_1188_2",
      "input_code": "def tiled_matmul(\n    a: List[List[torch.Tensor]],\n    b: List[List[torch.Tensor]],\n) -> List[List[torch.Tensor]]:\n    \n    ms, ns, ks = check_inputs(a, b)\n    flat_a = _flatten(a, len(ms), len(ks))\n    flat_b = _flatten(b, len(ks), len(ns))\n    flat_c = tiled_matmul_fwd(flat_a, flat_b, ms, ns, ks)\n    c = _unflatten(flat_c, len(ms), len(ns))\n    return c\n"
    },
    {
      "id": "facebookresearch_xformers_1188_1",
      "input_code": "def tiled_matmul_bwd(ctx, flat_grad_c):\n    assert len(ctx.saved_tensors) == len(ctx.ms) * len(ctx.ks) + len(ctx.ks) * len(\n        ctx.ns\n    )\n    flat_a = ctx.saved_tensors[: len(ctx.ms) * len(ctx.ks)]\n    flat_b = ctx.saved_tensors[-len(ctx.ks) * len(ctx.ns) :]\n\n    flat_transposed_a = _flattened_transpose(flat_a, len(ctx.ms), len(ctx.ks))\n    flat_transposed_b = _flattened_transpose(flat_b, len(ctx.ks), len(ctx.ns))\n\n    flat_grad_a = tiled_matmul_fwd(\n        flat_grad_c, flat_transposed_b, ctx.ms, ctx.ks, ctx.ns\n    )\n    flat_grad_b = tiled_matmul_fwd(\n        flat_transposed_a, flat_grad_c, ctx.ks, ctx.ns, ctx.ms\n    )\n\n    return flat_grad_a, flat_grad_b, None, None, None\n"
    }
  ],
  "generated_inputs": [
    "<needimport>\nimport torch\nfrom typing import List\n\n<testcase_1>\nflat_a = [torch.randn(2, 3), torch.randn(2, 3)]\nflat_b = [torch.randn(3, 4), torch.randn(3, 4)]\nms = [2]\nns = [4]\nks = [3]\n\n<testcase_2>\nflat_a = [torch.randn(5, 6), torch.randn(5, 6), torch.randn(5, 6)]\nflat_b = [torch.randn(6, 7), torch.randn(6, 7), torch.randn(6, 7)]\nms = [5]\nns = [7]\nks = [6]\n\n<testcase_3>\nflat_a = [torch.randn(8, 9), torch.randn(8, 9)]\nflat_b = [torch.randn(9, 10), torch.randn(9, 10)]\nms = [8]\nns = [10]\nks = [9]\n\n<testcase_4>\nflat_a = [torch.randn(3, 4), torch.randn(3, 4), torch.randn(3, 4), torch.randn(3, 4)]\nflat_b = [torch.randn(4, 5), torch.randn(4, 5), torch.randn(4, 5), torch.randn(4, 5)]\nms = [3]\nns = [5]\nks = [4]\n\n<testcase_5>\nflat_a = [torch.randn(6, 7), torch.randn(6, 7)]\nflat_b = [torch.randn(7, 8), torch.randn(7, 8)]\nms = [6]\nns = [8]\nks = [7]"
  ],
  "gpt_output": "<needimport>\nimport torch\nfrom typing import List\n\n<testcase_1>\nflat_a = [torch.randn(2, 3), torch.randn(2, 3)]\nflat_b = [torch.randn(3, 4), torch.randn(3, 4)]\nms = [2]\nns = [4]\nks = [3]\n\n<testcase_2>\nflat_a = [torch.randn(5, 6), torch.randn(5, 6), torch.randn(5, 6)]\nflat_b = [torch.randn(6, 7), torch.randn(6, 7), torch.randn(6, 7)]\nms = [5]\nns = [7]\nks = [6]\n\n<testcase_3>\nflat_a = [torch.randn(8, 9), torch.randn(8, 9)]\nflat_b = [torch.randn(9, 10), torch.randn(9, 10)]\nms = [8]\nns = [10]\nks = [9]\n\n<testcase_4>\nflat_a = [torch.randn(3, 4), torch.randn(3, 4), torch.randn(3, 4), torch.randn(3, 4)]\nflat_b = [torch.randn(4, 5), torch.randn(4, 5), torch.randn(4, 5), torch.randn(4, 5)]\nms = [3]\nns = [5]\nks = [4]\n\n<testcase_5>\nflat_a = [torch.randn(6, 7), torch.randn(6, 7)]\nflat_b = [torch.randn(7, 8), torch.randn(7, 8)]\nms = [6]\nns = [8]\nks = [7]",
  "needimport": "import torch\nfrom typing import List\n\n",
  "test_results": {
    "ans1": [
      [
        [
          2.5459158420562744,
          1.1900752782821655,
          0.8621618747711182,
          -1.2736144065856934
        ],
        [
          -0.9973098635673523,
          -0.5188273191452026,
          0.6719829440116882,
          -0.061596065759658813
        ]
      ]
    ],
    "ans2": [
      [
        [
          -5.157448768615723,
          -1.1868655681610107,
          -1.0072851181030273,
          -4.5371294021606445,
          2.818897008895874,
          1.5255341529846191,
          -1.908015489578247
        ],
        [
          -0.15394771099090576,
          -2.6919641494750977,
          -1.6564092636108398,
          -1.30074942111969,
          2.183384895324707,
          -1.836098313331604,
          0.359311580657959
        ],
        [
          8.156570434570312,
          -0.6754992008209229,
          0.5491958260536194,
          1.4618711471557617,
          0.26527953147888184,
          -5.457956314086914,
          -1.8846209049224854
        ],
        [
          2.8954319953918457,
          -1.5198681354522705,
          1.796765923500061,
          1.8320598602294922,
          -0.5509743690490723,
          -1.354311466217041,
          1.9969096183776855
        ],
        [
          4.787995338439941,
          -1.285410761833191,
          2.310744524002075,
          1.264340877532959,
          -1.4899168014526367,
          0.11497904360294342,
          1.856487512588501
        ]
      ]
    ],
    "ans3": [
      [
        [
          1.243526816368103,
          1.8664238452911377,
          -0.5874144434928894,
          0.14032575488090515,
          0.7568732500076294,
          -0.13321101665496826,
          3.2040979862213135,
          -4.697852611541748,
          4.6473612785339355,
          1.2299952507019043
        ],
        [
          -2.0343031883239746,
          1.4682931900024414,
          1.9830358028411865,
          1.1689590215682983,
          7.642858982086182,
          -3.35841703414917,
          0.8969507217407227,
          -1.2929375171661377,
          -0.6645694971084595,
          -2.425400495529175
        ],
        [
          -4.495820999145508,
          -2.47821044921875,
          2.1409752368927,
          -2.1698009967803955,
          -1.1615417003631592,
          -1.5232051610946655,
          -5.876901626586914,
          4.871427059173584,
          -5.841375827789307,
          -0.010692805051803589
        ],
        [
          0.8350988626480103,
          1.9259670972824097,
          1.1492334604263306,
          1.2662103176116943,
          5.661898612976074,
          -1.3741378784179688,
          -0.016273438930511475,
          4.141486644744873,
          -3.4301514625549316,
          -2.6918046474456787
        ],
        [
          -0.02990555763244629,
          0.9737749099731445,
          1.2562419176101685,
          -0.1940550059080124,
          3.1720666885375977,
          -1.3332998752593994,
          -3.62147855758667,
          0.49641722440719604,
          1.9815832376480103,
          -0.24846749007701874
        ],
        [
          2.4358155727386475,
          1.4886361360549927,
          0.8959262371063232,
          4.307860374450684,
          -1.0438275337219238,
          5.336392402648926,
          7.170938968658447,
          0.5147978067398071,
          -2.3018486499786377,
          0.9964438676834106
        ],
        [
          -2.511488437652588,
          0.7550431489944458,
          -0.7162953615188599,
          -0.7740064859390259,
          1.3947405815124512,
          -0.3159884512424469,
          1.3751574754714966,
          1.8008004426956177,
          -5.664900779724121,
          1.0471490621566772
        ],
        [
          -0.38977381587028503,
          1.6643810272216797,
          2.136296510696411,
          0.3877158761024475,
          0.9878612756729126,
          0.9041976928710938,
          -0.39434516429901123,
          -0.09811222553253174,
          0.22657084465026855,
          -0.044550180435180664
        ]
      ]
    ],
    "ans4": [
      [
        [
          -0.3234438896179199,
          -3.9427032470703125,
          -0.9577029943466187,
          3.4882583618164062,
          -3.510348081588745
        ],
        [
          0.14113827049732208,
          -3.291012763977051,
          -0.41288483142852783,
          2.868408679962158,
          -4.906562805175781
        ],
        [
          -0.38454627990722656,
          2.618565082550049,
          -0.831457257270813,
          -2.7995688915252686,
          1.8451098203659058
        ]
      ]
    ],
    "ans5": [
      [
        [
          -1.9046261310577393,
          3.8114967346191406,
          -1.3101705312728882,
          4.3220038414001465,
          2.008862257003784,
          1.0657018423080444,
          -2.9362382888793945,
          -2.187204360961914
        ],
        [
          0.26966702938079834,
          3.1318717002868652,
          4.615288734436035,
          -5.142795562744141,
          -4.011375904083252,
          -0.021365761756896973,
          -4.658798694610596,
          0.8776260614395142
        ],
        [
          0.36168187856674194,
          1.2288784980773926,
          2.2296619415283203,
          -0.9264177680015564,
          -0.8173879384994507,
          -2.1794273853302,
          -0.687529981136322,
          -0.06061926484107971
        ],
        [
          -3.1590144634246826,
          4.133450031280518,
          0.07642030715942383,
          1.8530776500701904,
          0.1049034595489502,
          2.52886700630188,
          -0.3944363594055176,
          -2.0038869380950928
        ],
        [
          2.5313050746917725,
          -3.751378059387207,
          -0.8724427223205566,
          0.41366326808929443,
          -3.469212532043457,
          1.4153112173080444,
          -3.6325936317443848,
          -2.6935858726501465
        ],
        [
          -1.368275761604309,
          -1.4583942890167236,
          1.994032621383667,
          1.188026785850525,
          0.814555823802948,
          -3.723038911819458,
          7.1512532234191895,
          -1.1339341402053833
        ]
      ]
    ]
  }
}