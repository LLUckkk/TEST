{
  "input_header": "def system_prompt():",
  "input_docstring": null,
  "output_code": "def system_prompt():\n    system = {\n        \"role\": \"system\",\n        \"content\": f\"你是{Me().name}，一个聪明、热情、善良的人，后面的对话来自你的朋友，你要认真地回答他\"\n    }\n    return system",
  "input_contexts": [
    {
      "id": "LC044_WeChatMsg_526_2",
      "input_code": "    def split_by_time(self, length=300):\n        messages = msg_db.get_messages_by_type(self.contact.wxid, type_=1, time_range=self.time_range)\n        start_time = 0\n        res = []\n        i = 0\n        while i < len(messages):\n            message = messages[i]\n            timestamp = message[5]\n            is_send = message[4]\n            group = [\n                system_prompt()\n            ]\n            while i < len(messages) and timestamp - start_time < length:\n                if is_send:\n                    json_msg = {\n                        \"role\": \"assistant\",\n                        \"content\": message[7]\n                    }\n                else:\n                    json_msg = {\n                        \"role\": \"user\",\n                        \"content\": message[7]\n                    }\n                group.append(json_msg)\n                i += 1\n                if i >= len(messages):\n                    break\n                message = messages[i]\n                timestamp = message[5]\n                is_send = message[4]\n            while is_send:\n                json_msg = {\n                    \"role\": \"assistant\",\n                    \"content\": message[7]\n                }\n                group.append(json_msg)\n                i += 1\n                if i >= len(messages):\n                    break\n                message = messages[i]\n                timestamp = message[5]\n                is_send = message[4]\n            start_time = timestamp\n            res.append(\n                {\n                    \"conversations\": group\n                }\n            )\n        res_ = []\n        for item in res:\n            conversations = item['conversations']\n            res_.append({\n                'conversations': merge_content(conversations)\n            })\n        return res_\n"
    },
    {
      "id": "LC044_WeChatMsg_526_1",
      "input_code": "def message_to_conversion(group):\n    conversions = [system_prompt()]\n    while len(group) and group[-1][4] == 0:\n        group.pop()\n    for message in group:\n        is_send = message[4]\n        if len(conversions) == 1 and is_send:\n            continue\n        if is_send:\n            json_msg = {\n                \"role\": \"assistant\",\n                \"content\": message[7]\n            }\n        else:\n            json_msg = {\n                \"role\": \"user\",\n                \"content\": message[7]\n            }\n        json_msg['str_time'] = message[8]\n        conversions.append(json_msg)\n    if len(conversions) == 1:\n        return []\n    return merge_content(conversions)\n"
    }
  ],
  "generated_inputs": [
    "<needimport>\nimport Me\n\n<testcase_1>\nme_instance = Me()\nme_instance.name = \"Alice\"\nsystem_prompt()\n\n<testcase_2>\nme_instance = Me()\nme_instance.name = \"Bob\"\nsystem_prompt()\n\n<testcase_3>\nme_instance = Me()\nme_instance.name = \"Charlie\"\nsystem_prompt()\n\n<testcase_4>\nme_instance = Me()\nme_instance.name = \"Diana\"\nsystem_prompt()\n\n<testcase_5>\nme_instance = Me()\nme_instance.name = \"Eve\"\nsystem_prompt()"
  ],
  "gpt_output": "<needimport>\nimport Me\n\n<testcase_1>\nme_instance = Me()\nme_instance.name = \"Alice\"\nsystem_prompt()\n\n<testcase_2>\nme_instance = Me()\nme_instance.name = \"Bob\"\nsystem_prompt()\n\n<testcase_3>\nme_instance = Me()\nme_instance.name = \"Charlie\"\nsystem_prompt()\n\n<testcase_4>\nme_instance = Me()\nme_instance.name = \"Diana\"\nsystem_prompt()\n\n<testcase_5>\nme_instance = Me()\nme_instance.name = \"Eve\"\nsystem_prompt()",
  "needimport": "import Me\n\n",
  "test_results": {
    "ans1": {
      "role": "system",
      "content": "你是Bob，一个聪明、热情、善良的人，后面的对话来自你的朋友，你要认真地回答他"
    },
    "ans2": {
      "role": "system",
      "content": "你是Bob，一个聪明、热情、善良的人，后面的对话来自你的朋友，你要认真地回答他"
    },
    "ans3": {
      "role": "system",
      "content": "你是Bob，一个聪明、热情、善良的人，后面的对话来自你的朋友，你要认真地回答他"
    },
    "ans4": {
      "role": "system",
      "content": "你是Bob，一个聪明、热情、善良的人，后面的对话来自你的朋友，你要认真地回答他"
    },
    "ans5": {
      "role": "system",
      "content": "你是Bob，一个聪明、热情、善良的人，后面的对话来自你的朋友，你要认真地回答他"
    }
  }
}