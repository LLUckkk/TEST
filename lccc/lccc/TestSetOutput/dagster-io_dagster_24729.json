{
  "input_header": "def _message_exists(event_records, message_text):",
  "input_docstring": null,
  "output_code": "def _message_exists(event_records, message_text):\n    for event_record in event_records:\n        if message_text in event_record.message:\n            return True\n\n    return False",
  "input_contexts": [
    {
      "id": "dagster-io_dagster_24729_1",
      "input_code": "def test_exity_run(\n    dagster_celery_worker,\n    instance: DagsterInstance,\n    workspace: WorkspaceRequestContext,\n    run_config: Mapping[str, Any],\n):\n    remote_job = (\n        workspace.get_code_location(\"test\")\n        .get_repository(\"celery_test_repository\")\n        .get_full_job(\"exity_job\")\n    )\n\n    run = instance.create_run_for_job(\n        job_def=exity_job,\n        run_config=run_config,\n        remote_job_origin=remote_job.get_remote_origin(),\n        job_code_origin=remote_job.get_python_origin(),\n    )\n\n    run_id = run.run_id\n\n    run = instance.get_run_by_id(run_id)\n    assert run\n    assert run.status == DagsterRunStatus.NOT_STARTED\n\n    instance.launch_run(run.run_id, workspace)\n\n    failed_run = instance.get_run_by_id(run_id)\n\n    assert failed_run\n    assert failed_run.run_id == run_id\n\n    poll_for_step_start(instance, run_id, timeout=5)\n    time.sleep(5)\n\n    failed_run = poll_for_finished_run(instance, run_id, timeout=5)\n    assert failed_run.status == DagsterRunStatus.FAILURE\n\n    event_records = instance.all_logs(run_id)\n\n    assert _message_exists(event_records, 'Execution of step \"exity_op\" failed.')\n    assert _message_exists(\n        event_records,\n        \"Execution of run for \\\"exity_job\\\" failed. Steps failed: ['exity_op']\",\n    )\n"
    }
  ],
  "generated_inputs": [
    "<needimport>\nimport time\nfrom typing import List\n\n<testcase_1>\nevent_records = [\n    {\"message\": 'Execution of step \"exity_op\" failed.'},\n    {\"message\": \"Execution of run for \\\"exity_job\\\" failed. Steps failed: ['exity_op']\"},\n    {\"message\": \"Another message\"},\n]\nmessage_text = 'Execution of step \"exity_op\" failed.'\n\n<testcase_2>\nevent_records = [\n    {\"message\": \"Execution of run for \\\"exity_job\\\" failed. Steps failed: ['exity_op']\"},\n    {\"message\": \"Another message\"},\n    {\"message\": \"Yet another message\"},\n]\nmessage_text = \"Execution of run for \\\"exity_job\\\" failed. Steps failed: ['exity_op']\"\n\n<testcase_3>\nevent_records = [\n    {\"message\": \"Some random message\"},\n    {\"message\": \"Another random message\"},\n    {\"message\": \"Yet another random message\"},\n]\nmessage_text = \"Non-existent message\"\n\n<testcase_4>\nevent_records = [\n    {\"message\": \"Execution of step \\\"exity_op\\\" failed.\"},\n    {\"message\": \"Execution of run for \\\"exity_job\\\" failed. Steps failed: ['exity_op']\"},\n    {\"message\": \"Another message\"},\n    {\"message\": \"Yet another message\"},\n]\nmessage_text = \"Another message\"\n\n<testcase_5>\nevent_records = [\n    {\"message\": \"Execution of step \\\"exity_op\\\" failed.\"},\n    {\"message\": \"Execution of run for \\\"exity_job\\\" failed. Steps failed: ['exity_op']\"},\n    {\"message\": \"Another message\"},\n    {\"message\": \"Yet another message\"},\n    {\"message\": \"Final message\"},\n]\nmessage_text = \"Final message\""
  ],
  "gpt_output": "<needimport>\nimport time\nfrom typing import List\n\n<testcase_1>\nevent_records = [\n    {\"message\": 'Execution of step \"exity_op\" failed.'},\n    {\"message\": \"Execution of run for \\\"exity_job\\\" failed. Steps failed: ['exity_op']\"},\n    {\"message\": \"Another message\"},\n]\nmessage_text = 'Execution of step \"exity_op\" failed.'\n\n<testcase_2>\nevent_records = [\n    {\"message\": \"Execution of run for \\\"exity_job\\\" failed. Steps failed: ['exity_op']\"},\n    {\"message\": \"Another message\"},\n    {\"message\": \"Yet another message\"},\n]\nmessage_text = \"Execution of run for \\\"exity_job\\\" failed. Steps failed: ['exity_op']\"\n\n<testcase_3>\nevent_records = [\n    {\"message\": \"Some random message\"},\n    {\"message\": \"Another random message\"},\n    {\"message\": \"Yet another random message\"},\n]\nmessage_text = \"Non-existent message\"\n\n<testcase_4>\nevent_records = [\n    {\"message\": \"Execution of step \\\"exity_op\\\" failed.\"},\n    {\"message\": \"Execution of run for \\\"exity_job\\\" failed. Steps failed: ['exity_op']\"},\n    {\"message\": \"Another message\"},\n    {\"message\": \"Yet another message\"},\n]\nmessage_text = \"Another message\"\n\n<testcase_5>\nevent_records = [\n    {\"message\": \"Execution of step \\\"exity_op\\\" failed.\"},\n    {\"message\": \"Execution of run for \\\"exity_job\\\" failed. Steps failed: ['exity_op']\"},\n    {\"message\": \"Another message\"},\n    {\"message\": \"Yet another message\"},\n    {\"message\": \"Final message\"},\n]\nmessage_text = \"Final message\"",
  "needimport": "import time\nfrom typing import List\n\n",
  "test_results": {
    "ans1": true,
    "ans2": true,
    "ans3": false,
    "ans4": true,
    "ans5": true
  }
}